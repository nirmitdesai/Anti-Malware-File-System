#ifndef LIST_H
#define LIST_H

#define XATTR_PATTERN_STATE "user.patternrm"
#define XATTR_BADFILE "user.amfs"

typedef struct node_
{
	int len;	
	struct node_ *next;
	char pattern[];
}Node;

typedef struct list_
{
	int size;
	int max_pattern_len;
	Node *head;
	char hash_table[95];
	int pattern_removed;
	char *full_path;
}List;

extern int set_or_unset_chattr(struct file *,int );
extern int contains_malware_pattern(const char __user *buf);
extern int build_linked_list(char *);
extern void delete_list(List *);
extern List pattern_list;
extern int sorted_insert(List *, char *, int, int);
extern int delete_pattern(List *, char *, int);
extern void traverse(List *);
extern int flush_to_file(void);
extern int set_xattr(struct file *, const char *, void *, int);
extern int get_xattr(struct file *, const char *, void *, int);
extern int remove_xattr(struct file *, const char *);
#endif
